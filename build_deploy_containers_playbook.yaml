---
- hosts: all
  vars:
    - container_registry: "container-registry.oracle.com"
    - container_registry_username: "adnn.selimovic@gmail.com"
    - container_registry_password: "VbS_esFlXm_pV3uid2Z"
    - container_registry_local: "localhost/"
    - autonomous_database_tag: "v0.0.1"
    - weblogic_server_tag: "v0.0.1"
    - autonomous_database_wallet_password: "123456789aA123"
    - autonomous_admin_password: "123456789aA123"
    - weblogic_username: "hello"
    - weblogic_password: "123456789"
    - security_properties: |-
        username={{ weblogic_username }}
        password={{ weblogic_password }}
        JAVA_OPTIONS=-Dweblogic.StdoutDebugEnabled=true
  tasks:
    - name: Login to  and create containers/auth.json
      containers.podman.podman_login:
        username: "{{ container_registry_username }}"
        password: "{{ container_registry_password }}"
        registry: "{{ container_registry }}"
      become: true

    - name: Recursively remove directory
      ansible.builtin.file:
        path: /tmp/oracle
        state: absent
      become: true

    - name: Clone a repo with separate git directory
      ansible.builtin.git:
        repo: https://github.com/oracleweboadb/oracle
        dest: /tmp/oracle
        version: main
        force: yes

    - name: Build a autonomous database image
      ansible.builtin.shell: |
        export CUSTOM_IMAGE_TAG="oracle/oad:{{ autonomous_database_tag }}"

        chmod +x /tmp/oracle/autonomous-database/build.sh
        /tmp/oracle/autonomous-database/build.sh $CUSTOM_IMAGE_TAG
      args:
        executable: /bin/bash
      become: true

    - name: Build a weblogic server image
      ansible.builtin.shell: |
        export CUSTOM_IMAGE_TAG="oracle/weblogic:{{ weblogic_server_tag }}"
        export WEBLOGIC_USERNAME={{ weblogic_username }}
        export WEBLOGIC_PASSWORD={{ weblogic_password }}
        export PROPERTIES_PATH=/tmp/oracle/weblogic-server/properties/docker-build/domain_security.properties

        envsubst < $PROPERTIES_PATH | tee $PROPERTIES_PATH

        chmod +x /tmp/oracle/weblogic-server/build.sh
        /tmp/oracle/weblogic-server/build.sh
      args:
        executable: /bin/bash
      become: true

    - name: Create a oadb volume
      containers.podman.podman_volume:
        state: present
        name: oadb_volume
        label:
          owner: autonomous-database

    - name: Create a podman network
      containers.podman.podman_network:
        name: oracle_network
      become: true

    - name: "Create the autonomous database container"
      containers.podman.podman_container:
        name: oadb
        hostname: oadb
        image: "{{ container_registry_local }}oracle/oad:{{ autonomous_database_tag }}"
        publish:
          - 1521:1522
          - 1522:1522
          - 8443:8443
          - 27017:27017
        env:
          WORKLOAD_TYPE: ATP
          WALLET_PASSWORD: "{{ autonomous_database_wallet_password }}"
          ADMIN_PASSWORD: "{{ autonomous_admin_password }}"
        cap_add:
          - SYS_ADMIN
        device:
          - /dev/fuse
        volume:
          - "oadb_volume:/u01/data"
        state: created
        network: "oracle_network"
        network_aliases:
          - "oadb"
        recreate: true
        rm: true
        generate_systemd:
          names: true
          restart_policy: always
      become: true

    - name: Ensure the directory /example/directory exists
      ansible.builtin.file:
        path: /tmp/properties
        state: directory
        mode: '0755'

    - name: Creating a file with content
      copy:
        dest: "/tmp/properties/security.properties"
        content: "{{ security_properties }}"

    - name: "Create the admin weblogic server container"
      containers.podman.podman_container:
        name: weblogic-admin
        hostname: weblogic-admin
        image: "{{ container_registry_local }}oracle/weblogic:{{ weblogic_server_tag }}"
        network: "oracle_network"
        network_aliases:
          - "wlsadmin"
        publish:
          - 7001:7001
        volume:
          - "/tmp/properties:/u01/oracle/properties:Z"
        state: created
        rm: true
        recreate: true
      become: true

    - name: "Create the managed weblogic server container"
      containers.podman.podman_container:
        name: managed-server1
        hostname: managed-server1
        image: "{{ container_registry_local }}oracle/weblogic:{{ weblogic_server_tag }}"
        env:
          MANAGED_SERV_NAME: "managed-server1"
        publish:
          - 8001:8001
        volume:
          - "/tmp/properties:/u01/oracle/properties:Z"
        state: created
        recreate: true
        command: "startManagedServer.sh"
        network: "oracle_network"
        rm: true
        network_aliases:
          - "managed-server1"
        generate_systemd:
          names: true
          restart_policy: always
      become: true

    - name: Generate systemd unit file for oadb
      containers.podman.podman_generate_systemd:
        name: oadb
        new: true
        no_header: true
        dest: /etc/systemd/system
      become: true

    - name: Ensure postgres container is started and enabled
      ansible.builtin.systemd:
        name: container-oadb
        daemon_reload: true
        state: started
        enabled: true
      become: true

    - name: Generate systemd unit file for weblogic-admin
      containers.podman.podman_generate_systemd:
        name: weblogic-admin
        new: true
        no_header: true
        dest: /etc/systemd/system
      become: true

    - name: Ensure weblogic-admin container is started and enabled
      ansible.builtin.systemd:
        name: container-weblogic-admin
        daemon_reload: true
        state: started
        enabled: true
      become: true

    - name: Generate systemd unit file for managed-server-1
      containers.podman.podman_generate_systemd:
        name: managed-server1
        new: true
        no_header: true
        dest: /etc/systemd/system
      become: true

    - name: Ensure managed-server-1 container is started and enabled
      ansible.builtin.systemd:
        name: container-managed-server1
        daemon_reload: true
        state: started
        enabled: true
      become: true